{"version":3,"sources":["actions/currentUser.js","components/Logout.js","components/NavBar.js","components/Home.js","components/About.js","components/Login.js","actions/loginForm.js","reducers/loginForm.js","reducers/favorites.js","reducers/signup.js","store.js","reducers/users.js","reducers/currentUser.js","reducers/tweets.js","reducers/user_tweets.js","actions/favorites.js","components/InfoWindowEx.js","components/Favorites.js","actions/user_tweets.js","components/Map.js","components/Mapbox.js","components/PostFavorites.js","components/Signup.js","actions/signup.js","App.js","actions/tweets.js","serviceWorker.js","index.js"],"names":["setCurrentUser","user","type","withRouter","connect","logout","event","dispatch","fetch","credentials","method","history","onSubmit","preventDefault","push","value","currentUser","loggedIn","Container","Navbar","sticky","className","NavLink","tag","RRNavLink","to","exact","username","Home","React","Component","About","props","handleChange","setState","myComment","target","handleSubmit","state","myComments","myCommentList","this","map","comment","name","onChange","placeholder","cols","rows","submit","loginForm","updateLoginForm","formData","login","headers","body","JSON","stringify","then","r","json","response","error","console","log","alert","catch","handleInputChange","updatedFormInfo","email","password","initialState","user_id","tweet_id","reducer","combineReducers","action","tweets","loading","payload","favoritesForm","postData","user_tweets","signupForm","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","updateFavoriteForm","favorite","theFavorite","InfoWindowEx","infoWindowRef","createRef","contentElement","document","createElement","prevProps","children","ReactDOM","render","Children","only","current","infowindow","setContent","ref","mapStyles","margin","width","padding","Favorites","onMarkerClick","marker","selectedTweet","id","text","selectedURL","url","selectedTweetID","selectedComment","activeMarker","showingInfoWindow","redirect","onMapClicked","displayMarkers","favoriteTweets","art","index","key","position","lat","lon","lng","onClick","fetchUserTweets","res","items","google","zoom","style","initialCenter","maps","Size","WrappedContainer","GoogleApiWrapper","apiKey","process","REACT_APP_GOOGLE_MAPS_KEY","MapContainer","updatedFavoriteInfo","myTweets","REACT_GMAPS_PRIVATE_KEY","TOKEN","REACT_APP_MAPBOX_KEY","navStyle","top","left","Map","viewport","latitude","longitude","bearing","pitch","height","popupInfo","streetart","onViewportChange","mapStyle","mapboxApiAccessToken","signupFormData","updateSignupForm","signup","userInfo","handleUserInfoInputChange","App","getCurrentUser","fetchTweets","Helmet","rel","href","integrity","crossorigin","path","component","Login","myUserTweets","PostFavorites","Boolean","location","hostname","match","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9acece1c.chunk.js","sourcesContent":["import { resetLoginForm } from \"./loginForm.js\"\nimport { resetSignupForm } from \"./signup.js\"\n\n// synchronous action creators\nexport const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  }\n}\n\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  }\n}\n\n// asynchronous action creators\nexport const login = (credentials, history) => {\n  return dispatch => {\n  return fetch((`/api/v1/login`), {  //http://localhost:3000\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(r => r.json())\n      .then(response => {\n        //debugger\n        if (response.error) {\n          console.log(response)\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response))\n          history.push('/')\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch((`/api/v1/get_current_user`), { //http://localhost:3000\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const logout = event => {\n  return dispatch => {\n    dispatch(clearCurrentUser())\n    return fetch(`/api/v1/logout`, {  //http://localhost:3000\n      credentials: \"include\",\n      method: \"DELETE\"\n    })\n  }\n}\n\nexport const signup = (credentials, history) => {\n  return dispatch => {\n    const userInfo = {\n      user: credentials\n    }\n    return fetch(`/api/v1/signup`, { //http://localhost:3000\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setCurrentUser(response))\n          dispatch(resetSignupForm())\n          history.push('/')\n        }\n      })\n      .catch(console.log)\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from \"../actions/currentUser.js\"\nimport { withRouter } from 'react-router-dom'\n\n\nconst Logout = ({ logout, history }) => {\n  return (\n    <form onSubmit={(event) => {\n        event.preventDefault()\n        logout()\n        history.push('/')\n      }\n    }>\n      <input type=\"submit\" value=\"Logout\"/>\n    </form>\n  )\n}\n\nexport default withRouter(connect(null, { logout } )(Logout))\n","import React from 'react'\nimport { connect } from 'react-redux'\n//import { NavLink } from 'react-router-dom'\n//import { NavLink } from 'reactstrap';\nimport { NavLink as RRNavLink, Link } from 'react-router-dom'\nimport Logout from './Logout'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap'\nimport Container from 'react-bootstrap/Container'\n\n/* Add basic styling for NavLinks */\n//const link = {\n  //width: '100px',\n  //padding: '12px',\n  //margin: '0 6px 6px',\n  //background: 'blue',\n  //textDecoration: 'none',\n  //color: 'white'\n//}\n\n/* add the navbar component */\nconst NavBar = ({currentUser, loggedIn}) => {\n  return(\n  <Container>\n   <Navbar sticky=\"top\" className=\"bg-light justify-content-between\">\n    <NavLink tag={RRNavLink}\n      to=\"/\"\n      /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n      exact\n      /* add styling to Navlink */\n      //style={link}\n      /* add prop for activeStyle */\n      //activeStyle={{\n      //  background: 'darkblue'\n      //}}\n    >Home</NavLink>\n    <NavLink tag={RRNavLink}\n      to=\"/about\"\n      exact\n      //style={link}\n      //activeStyle={{\n      //  background: 'darkblue'\n      //}}\n    >About</NavLink>\n    <NavLink tag={RRNavLink}\n      to=\"/login\"\n      exact\n      //style={link}\n      //activeStyle={{\n      //  background: 'darkblue'\n      //}}\n    >Login</NavLink>\n    {loggedIn ?\n    <NavLink tag={RRNavLink}\n      to=\"/map\"\n      exact\n      //style={link}\n      //activeStyle={{\n      //  background: 'darkblue'\n      //}}\n    >Map</NavLink>\n    : null}\n    {loggedIn ?\n      <NavLink tag={RRNavLink}\n        to=\"/favorites\"\n        exact\n        //style={link}\n        //activeStyle={{\n        //  background: 'darkblue'\n        //}}\n      >Favorites</NavLink>\n      : null}\n      { loggedIn ?\n      <>  <p>Logged in as {currentUser.username}</p><Logout/></> : null}\n      </Navbar>\n  </Container>\n  )}\n\n  const mapStateToProps = ({currentUser}) => {\n    return {\n      currentUser,\n      loggedIn: !!currentUser\n    }\n  }\n\n  export default connect(mapStateToProps)(NavBar)\n","import React from 'react';\nimport Script from 'react-load-script'\nimport scriptLoader from 'react-async-script-loader'\nimport Container from 'react-bootstrap/Container'\nimport { Link } from 'react-router-dom'\n\n\nexport default class Home extends React.Component {\n\n  render() {\n\n    return (\n      <Container>\n      <h1>home</h1>\n      <h6><Link to=\"/signup\">Sign Up</Link> or <Link to=\"/login\">Log In</Link> to view a map of geolocated streetart tweets.\n      <br/>\n      comment on and save your favorites.</h6>\n      </Container>\n    );\n    console.log(this.state.myUser)\n  }\n}\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myComments: [],\n      myComment: ''\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({myComment: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState(state => {\n      const myUpdatedComments = [...state.myComments, state.myComment]\n      return {\n        myComments: myUpdatedComments,\n        myComment:''\n      }\n    })\n  }\n\n  render(){\n    const myCommentList = this.state.myComments.map((comment) =>\n      <li>{comment}</li>\n    );\n    return (\n      <Container>\n        <h1>about</h1>\n        <h6>\n        visualizing streetart as it is posted on twitter around the world.\n        </h6>\n        <form onSubmit = {this.handleSubmit}>\n          <textarea name=\"comment\" value={this.state.myComment} onChange = {this.handleChange} placeholder=\"Add a note\" cols=\"20\" rows=\"5\"></textarea>\n          <br/><input type=\"submit\" value=\"Add to my favorites\" />\n        </form>\n        <ul>{myCommentList}</ul>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateLoginForm } from \"../actions/loginForm\"\nimport { login } from \"../actions/currentUser\"\nimport Container from 'react-bootstrap/Container'\n\nconst Login = ({ submit, updateLoginForm, login, history }) => {\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n    const updatedFormInfo = {\n      ...submit,\n      [name]: value\n    }\n    updateLoginForm(updatedFormInfo)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    login(submit, history)\n    alert(\"logged in!\")\n  }\n\n  return (\n    <Container>\n    <br/>\n    <form onSubmit={handleSubmit}>\n      <input placeholder=\"username\" value={submit.username} name=\"username\" type=\"text\" onChange={handleInputChange} />\n      <br/>\n      <input placeholder=\"email\" value={submit.email} name=\"email\" type=\"text\" onChange={handleInputChange} />\n      <br/>\n      <input placeholder=\"password\" value={submit.password} name=\"password\" type=\"password\" onChange={handleInputChange} />\n      <br/>\n      <input type=\"submit\" value=\"Login\"/>\n    </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    submit: state.loginForm\n  }\n}\n\nexport default connect(mapStateToProps, { updateLoginForm, login } )(Login)\n","export const updateLoginForm = formData => {\n  return {\n    type: \"UPDATE_LOGIN_FORM\",\n    formData\n  }\n}\n\nexport const resetLoginForm = () => {\n  return {\n    type: \"RESET_LOGIN_FORM\"\n  }\n}\n","const initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_LOGIN_FORM\":\n      return action.formData\n    case \"RESET_LOGIN_FORM\":\n      return initialState\n    default:\n      return state\n  }\n}\n","const initialState = {\n  user_id: \"\",\n  tweet_id: \"\",\n  comment: \"\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_FAVORITE_FORM\":\n      return action.postData\n    case \"POST_FAVORITE\":\n      return action.postData\n    case \"RESET_FAVORITE\":\n      return initialState\n    default:\n      return state\n  }\n}\n","const initialState = {\n  email: \"\",\n  username: \"\",\n  password: \"\"\n}\n\nexport default (state=initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_SIGNUP_FORM\":\n      return action.formData\n    case \"RESET_SIGNUP_FORM\":\n      return initialState\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport usersReducer from './reducers/users'\nimport currentUser from './reducers/currentUser'\nimport loginForm from './reducers/loginForm'\nimport tweetsReducer from './reducers/tweets'\nimport favorites from './reducers/favorites'\nimport userTweetsReducer from './reducers/user_tweets'\nimport signup from './reducers/signup'\n\nconst reducer = combineReducers({\n  user: usersReducer,\n  currentUser: currentUser,\n  loginForm: loginForm,\n  tweets: tweetsReducer,\n  favoritesForm: favorites,\n  user_tweets: userTweetsReducer,\n  signupForm: signup\n})\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store\n","export default (state = [],action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n","export default (state = null,action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_USER\":\n      return action.user\n    case \"CLEAR_CURRENT_USER\":\n    return null\n    default:\n      return state\n  }\n}\n","export default function tweetsReducer(state = {loading: false, tweets:[]}, action) {\nswitch (action.type) {\n\n  case 'FETCH_TWEETS':\n    return {\n      loading: false,\n      tweets: action.payload\n    }\n  case 'LOADING_TWEETS':\n    return {\n      ...state,\n      loading: true\n    }\n  default:\n    return state;\n}\n}\n","export default function userTweetsReducer(state = {loading: false, user_tweets:[]}, action) {\nswitch (action.type) {\n\n  case 'FETCH_USER_TWEETS':\n    return {\n      loading: false,\n      tweets: action.payload\n    }\n  case 'LOADING_USER_TWEETS':\n    return {\n      ...state,\n      loading: true\n    }\n  default:\n    return state;\n}\n}\n","export const updateFavoriteForm = postData => {\n  return {\n    type: \"UPDATE_FAVORITE_FORM\",\n    postData\n  }\n}\n\nexport const postFavorite = postData => {\n  return {\n    type: \"POST_FAVORITE\",\n    postData\n  }\n}\n\nexport const resetFavorite = () => {\n  return {\n    type: \"RESET_FAVORITE\"\n  }\n}\n\n//async\nexport const favorite = theFavorite => {\n  return dispatch => {\n  return fetch((`/api/v1/post_user_tweets`), {  //http://localhost:3000\n      //credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(theFavorite)\n    })\n      .then(r => r.json())\n      .then(response => {\n        //debugger\n        if (response.error) {\n          //alert(response.error)\n          console.log(response)\n        } else {\n          dispatch(postFavorite(response))\n          //history.push('/')\n        }\n      })\n      .catch(console.log)\n  }\n}\n","import React, { Component } from 'react'\nimport { InfoWindow } from 'google-maps-react'\nimport ReactDOM from 'react-dom'\n\nexport default class InfoWindowEx extends Component {\n    constructor(props) {\n        super(props)\n        this.infoWindowRef = React.createRef()\n        this.contentElement = document.createElement(`div`)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.children !== prevProps.children) {\n            ReactDOM.render(\n                React.Children.only(this.props.children),\n                this.contentElement\n            )\n            this.infoWindowRef.current.infowindow.setContent(\n                this.contentElement\n            )\n        }\n    }\n\n    render() {\n        return <InfoWindow ref={this.infoWindowRef} {...this.props} />\n    }\n}\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, GoogleMap } from 'google-maps-react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport store from '../store'\nimport Container from 'react-bootstrap/Container'\nimport { favorite, updateFavoriteForm } from \"../actions/favorites\"\nimport InfoWindowEx from './InfoWindowEx'\nimport { fetchUserTweets } from '../actions/user_tweets'\n\nconst mapStyles = {\n  margin: 'auto',\n  width: '70%',\n  padding: '20px'\n};\n\nexport class Favorites extends Component {\n\n  componentWillMount() {\n    this.props.fetchUserTweets().then(res => {\n      this.setState({favoriteTweets: res.payload});\n    })\n  }\n\n  constructor(props) {\n    super(props);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      selectedTweet: [],\n      selectedURL: [],\n      selectedComment: [],\n      selectedTweetID: [],\n      activeMarker: {},\n      showingInfoWindow: false,\n      favoriteTweets: []\n    };\n  }\n\n  onMarkerClick = (marker) => {\n      this.setState({\n          selectedTweet: this.props.user_tweets.tweets[marker.id].text,\n          selectedURL: this.props.user_tweets.tweets[marker.id].url,\n          selectedTweetID: this.props.user_tweets.tweets[marker.id].id,\n          selectedComment: this.props.user_tweets.tweets[marker.id].comment,\n          activeMarker: marker,\n          showingInfoWindow: true,\n          redirect: false\n      })\n      console.log(this.state.selectedTweet)\n  }\n\n  onMapClicked = () => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null,\n      redirect: true\n    })\n  }\n};\n\n    displayMarkers = () => {\n\n      return this.state.favoriteTweets.map((art, index) => {\n        return <Marker key={index} id={index} position={{\n         lat: art.lon*1,\n         lng: art.lat*1\n       }}\n       //onClick={() => console.log(\"you clicked\")}\n       onClick={this.onMarkerClick}\n       />\n      })\n    }\n\n  render() {\n    //debugger\n    //console.log(this.props.currentUser)\n    console.log(this.state.items)\n    //debugger\n    return (\n      <>\n      <Container>\n      <h1>favorite tweets</h1>\n      <h6>click on the markers to view your favorite tweets</h6>\n      </Container>\n      <Map\n        google={this.props.google}\n        zoom={7}\n        style={mapStyles}\n        onClick={this.onMapClicked}\n        initialCenter={{\n         lat: 40.7831,\n         lng: -73.9712\n       }}\n       >\n       {this.displayMarkers()}\n       { this.state.showingInfoWindow ?\n         <InfoWindowEx\n        position={this.state.activeMarker.position}  pixelOffset={new this.props.google.maps.Size(0, -30)}\n        visible={this.state.showingInfoWindow}>\n          <div>\n            <p>{this.state.selectedTweet}</p>\n            <a href={this.state.selectedURL} target=\"_blank\">{this.state.selectedURL}</a>\n            <br/>\n            <p>My comment: {this.state.selectedComment}</p>\n          </div>\n        </InfoWindowEx>\n      : null\n      }\n      </Map>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user_tweets: state.user_tweets\n  }\n}\n\nconst WrappedContainer = GoogleApiWrapper({\n    apiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY\n  })(Favorites);\n\nexport default connect (mapStateToProps,{fetchUserTweets})(WrappedContainer)\n","export function fetchUserTweets() {\n  //debugger\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_USER_TWEETS' });\n    return fetch(`/api/v1/get_user_tweets`,{  //http://localhost:3000\n      credentials: \"include\"})\n    .then(response => response.json())\n    //.then(myJson=> console.log(myJson))\n      //.then(response => {\n      //  debugger\n        //if (response.error) {\n          //debugger\n        //  console.log(response)\n        //}else {\n          //debugger\n        //  console.log(response)\n        //response.json()\n        //}\n    //  }\n    //)\n      .then(user_tweets => dispatch({ type: 'FETCH_USER_TWEETS', payload: user_tweets}));\n  };\n}\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker, GoogleMap } from 'google-maps-react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport store from '../store'\nimport Container from 'react-bootstrap/Container'\nimport { favorite, updateFavoriteForm } from \"../actions/favorites\"\nimport InfoWindowEx from './InfoWindowEx'\n//const {REACT_GMAPS_KEY} = process.env;\n\nconst mapStyles = {\n  margin: 'auto',\n  width: '70%',\n  padding: '20px'\n};\n\nexport class MapContainer extends Component {\n\n  constructor(props) {\n    super(props);\n    //this.onMapClicked = this.onMapClicked.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      selectedTweet: [],\n      selectedURL: [],\n      selectedTweetID: [],\n      activeMarker: {},\n      showingInfoWindow: false\n    };\n  }\n\n  handleInputChange = (event) => {\n  const { name, value } = event.target\n  const updatedFavoriteInfo = {\n    ...this.props.postData,\n    [name]: value\n  }\n  //console.log(event.target.name)\n  //console.log(event.target.value)\n  console.log(updatedFavoriteInfo)\n  //debugger\n  this.props.updateFavoriteForm(updatedFavoriteInfo)\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    //debugger\n    //debugger\n    console.log('A')\n    this.props.favorite(this.props.postData)\n    console.log('B')\n    //this.setState({\n    //  showingInfoWindow: false,\n    //  activeMarker: null\n    //})\n    alert(\"tweet saved to favorites\")\n  }\n\n  onMarkerClick = (marker) => {\n      this.setState({\n          selectedTweet: this.props.myTweets.tweets[marker.id].text,\n          selectedURL: this.props.myTweets.tweets[marker.id].url,\n          selectedTweetID: this.props.myTweets.tweets[marker.id].id,\n          activeMarker: marker,\n          showingInfoWindow: true,\n          redirect: false\n      })\n      console.log(this.state.selectedTweet)\n  }\n\n  onMapClicked = (props) => {\n    //debugger\n  if (this.state.showingInfoWindow) {\n    console.log(\"this works\")\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    })\n    console.log(\"why doesnt that work\")\n    console.log(this.state.showingInfoWindow)\n    console.log(this.state.activeMarker)\n  }\n};\n\n    displayMarkers = () => {\n      return this.props.myTweets.tweets.map((art, index) => {\n        return <Marker key={index} id={index} position={{\n         lat: art.lon*1,\n         lng: art.lat*1\n       }}\n       //onClick={() => console.log(\"you clicked\")}\n       onClick={this.onMarkerClick}\n       />\n      })\n    }\n\n  render() {\n    //debugger\n    //console.log(this.props.currentUser)\n    console.log(\"rerendered\")\n    console.log(this.state.activeMarker.position)\n    console.log(this.props)\n    return (\n      <>\n      <Container>\n      <h1>tweets</h1>\n      <h6>click on a marker to view tweet and add to favorites</h6>\n      </Container>\n      <Map\n        google={this.props.google}\n        zoom={7}\n        style={mapStyles}\n        initialCenter={{\n         lat: 40.7831,\n         lng: -73.9712\n       }}\n       >\n       {this.displayMarkers()}\n       { this.state.showingInfoWindow ?\n         <InfoWindowEx\n        position={this.state.activeMarker.position}  pixelOffset={new this.props.google.maps.Size(0, -30)}\n        visible={true}>\n          <div>\n            <p>{this.state.selectedTweet}</p>\n            <a href={this.state.selectedURL} target=\"_blank\">{this.state.selectedURL}</a>\n            <br />\n            <form onSubmit = {this.handleSubmit}>\n              <input type=\"hidden\" name=\"user_id\" value={this.props.postData.user_id = this.props.currentUser.id} />\n              <input type=\"hidden\" name=\"tweet_id\" value={this.props.postData.tweet_id = this.state.selectedTweetID} />\n              <textarea name=\"comment\" value={this.props.postData.comment} onChange={this.handleInputChange} placeholder=\"Add a note\" cols=\"20\" rows=\"5\"></textarea>\n              <br/><input type=\"submit\" value=\"Add to my favorites\" />\n            </form>\n          </div>\n        </InfoWindowEx>\n      : null\n      }\n      </Map>\n      </>\n    );\n  }\n}\n  const mapStateToProps = state => {\n    return {\n      postData: state.favoritesForm\n    }\n  }\n\nconst WrappedContainer = GoogleApiWrapper({\n    apiKey: process.env.REACT_GMAPS_PRIVATE_KEY\n  })(MapContainer);\n\nexport default connect (mapStateToProps,{updateFavoriteForm, favorite})(WrappedContainer)\n","import React, {Component} from 'react';\nimport MapGL, {NavigationControl} from 'react-map-gl';\n\nconst TOKEN = process.env.REACT_APP_MAPBOX_KEY;\n\nconst navStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  padding: '10px'\n};\n\nexport default class Map extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        latitude: 39.9526,\n        longitude: -75.1652,\n        zoom: 10,\n        bearing: 0,\n        pitch: 0,\n        width: 500,\n        height: 500\n      },\n      popupInfo: null,\n      streetart: [{latitude: 39.95, longitude: -75.165, url:\"gohere\"},\n              {latitude: 39.952, longitude: -75.1645, url: \"andgohere\"}]\n    };\n    //this.renderPopup = this.renderPopup.bind(this)\n  }\n\nrender() {\n    const {viewport} = this.state;\nreturn (\n      <MapGL\n        {...viewport}\n        onViewportChange={(viewport) => this.setState({viewport})}\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n        mapboxApiAccessToken = {TOKEN}>\n        <div className=\"nav\" style={navStyle}>\n          <NavigationControl/>\n        </div>\n      </MapGL>\n    );\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { favorite, updateFavoriteForm } from \"../actions/favorites\"\n\nconst PostFavorites = ({ postData, favorite, history }) => {\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n    const updatedFavoriteInfo = {\n      ...postData,\n      [name]: value\n    }\n    updateFavoriteForm(updatedFavoriteInfo)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    favorite(postData)\n  }\n\n  //const myUser = {this.props.currentUser.id}\n  //const myTweet = {this.state.selectedTweetID}\n\n  return (\n    <form  onSubmit = {handleSubmit}>\n      <input type=\"hidden\" name=\"user_id\" value={postData.user_id = 3} />\n      <input type=\"hidden\" name=\"tweet_id\" value={postData.tweet_id = 39} />\n      <textarea name=\"comment\" value={postData.comment} onChange={handleInputChange} placeholder=\"Add a note\" cols=\"20\" rows=\"5\"></textarea>\n      <input type=\"submit\" value=\"Add to my favorites\" />\n    </form>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    postData: state.favoritesForm\n  }\n}\n\nexport default connect(mapStateToProps, { updateFavoriteForm, favorite } )(PostFavorites)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateSignupForm } from \"../actions/signup.js\"\nimport { signup } from \"../actions/currentUser.js\"\nimport Container from 'react-bootstrap/Container'\n\nconst Signup = ({ signupFormData, updateSignupForm, signup, history }) => {\n\n  const handleUserInfoInputChange = event => {\n    const { name, value } = event.target\n    const updatedFormInfo = {\n      ...signupFormData,\n      [name]: value\n    }\n    updateSignupForm(updatedFormInfo)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    signup(signupFormData, history)\n  }\n\n  return (\n    <Container>\n    <br/>\n    <form onSubmit={handleSubmit}>\n      <input placeholder=\"username\" value={signupFormData.username} name=\"username\" type=\"text\" onChange={handleUserInfoInputChange} />\n      <br/>\n      <input placeholder=\"email\" value={signupFormData.email} name=\"email\" type=\"text\" onChange={handleUserInfoInputChange} />\n      <br/>\n      <input placeholder=\"password\" value={signupFormData.password} name=\"password\" type=\"password\" onChange={handleUserInfoInputChange} />\n      <br/>\n      <input type=\"submit\" value=\"Sign Up\"/>\n    </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    signupFormData: state.signupForm\n  }\n}\n\nexport default connect(mapStateToProps, { updateSignupForm, signup } )(Signup)\n","export const updateSignupForm = formData => {\n  return {\n    type: \"UPDATE_SIGNUP_FORM\",\n    formData\n  }\n}\n\nexport const resetSignupForm = () => {\n  return {\n    type: \"RESET_SIGNUP_FORM\"\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { getCurrentUser } from './actions/currentUser'\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport NavBar from './components/NavBar'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Login from './components/Login'\nimport Favorites from './components/Favorites'\nimport MapContainer from './components/Map'\nimport Map from './components/Mapbox'\nimport PostFavorites from './components/PostFavorites'\nimport Signup from './components/Signup.js'\nimport { fetchTweets } from './actions/tweets'\nimport { fetchUserTweets } from './actions/user_tweets'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getCurrentUser()\n    this.props.fetchTweets()\n    //this.props.fetchUserTweets()\n  }\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>streetart.map</title>\n          <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossorigin=\"anonymous\"\n          />\n        </Helmet>\n        <NavBar />\n        <Route exact path='/signup' render={({history})=><Signup history={history}/>}/>\n        <Route exact path='/' render={(props) => <Home currentUser={this.props.currentUser} myTweets={this.props.tweets}/>}/>\n        <Route exact path='/about' render={(props) => <About currentUser={this.props.currentUser}/>}/>\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/map' render={(props) => <MapContainer myUserTweets={this.props.user_tweets} myTweets={this.props.tweets} currentUser={this.props.currentUser}/>} />\n        <Route exact path='/mapbox' component={Map} />\n        <Route exact path='/favorites' render={(props) => <Favorites currentUser={this.props.currentUser}/>} /> \n        <Route exact path='/post_favorites' component={PostFavorites} />\n      </div>\n    ); //return\n  } //render\n} //class App\n\nconst mapStateToProps = state => {\n  return {\n    tweets: state.tweets,\n    currentUser: state.currentUser,\n    user_tweets: state.user_tweets\n  }\n}\n\n//export default connect (mapStateToProps,{getCurrentUser,fetchTweets, fetchUserTweets})(App);\nexport default connect (mapStateToProps,{getCurrentUser,fetchTweets})(App);\n","// synchronous action creators\n//export const setTweets = tweet => {\n//  return {\n//    type: \"SET_TWEETS\",\n//    tweet\n//  }\n//}\n\n//async action creators\n\nexport function fetchTweets() {\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_TWEETS' });\n    //const myUrl = window.location.origin.replace(/:\\d+/,':3000')\n    return fetch(`/api/v1/get_tweets`)  //http://localhost:3000\n    //return fetch(myUrl + '/api/v1/get_tweets')\n      .then(response => response.json())\n      .then(tweets => dispatch({ type: 'FETCH_TWEETS', payload: tweets}));\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n\n  ReactDOM.render(\n    <Provider store={ store }>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById('root')\n  );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}